{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Button/index.js","components/SignOut/index.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/SignIn/index.js","components/PasswordForget/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","fieldValue","firestore","FieldValue","db","Button","className","concat","extraClassName","onClick","action","name","_ref","components_Button","HOME","NavigationAuth","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","authUser","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","console","log","window","location","href","context","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","then","setState","objectSpread","history","push","catch","preventDefault","onChange","defineProperty","target","value","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","SignUpForm","compose","withRouter","SignUpPage","SignInFormBase","SignInForm","SignInPage","SignUp_SignUpLink","PasswordForget","Home","version","Account","Admin","App","_this2","listener","onAuthStateChanged","components_Navigation","react_router","exact","path","component","LandingPage","PasswordForgetPage","HomePage","AccountPage","AdminPage","Boolean","hostname","match","ReactDOM","render","Provider","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c9e9013.chunk.js","sourcesContent":["import React from 'react';\nconst FirebaseContext = React.createContext(null);\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\nexport default FirebaseContext;\n\n// const FirebaseContext = React.createContext(null); ---> createContext() crea 2 componentes:\n// 1. FirebaseContext.Provider: proveerá UNA INSTANCIA SOLO UNA VEZ de Firebase\n//     en el nivel más alto del árbol de componentes (ver src/index.js)\n// 2. FirebaseContext.Consumer trae la instancia de Firebase creada en el\n//     componente que la necesita\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth(); // *** Instantiate Firebase AUTH ***\n    this.fieldValue = app.firestore.FieldValue;\n    this.db = app.firestore();\n  }\n  // *** Firebase AUTH API ***\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\nexport default Firebase;\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nconst Button = props => {\n  return (\n    <button\n      className={`Button Button-primary ${\n        props.extraClassName ? props.extraClassName : ''\n      }`}\n      onClick={props.action}\n    >\n      {props.name}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport Button from '../Button';\n\nconst SignOutButton = ({ firebase }) => (\n  <Button name=\"Cerrar Sesión\" action={firebase.doSignOut} />\n);\n\nexport default withFirebase(SignOutButton);\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = ({ authUser }) => (\n  <nav className=\"main-menu\">\n    {authUser ? <NavigationAuth /> : <NavigationNonAuth />}\n  </nav>\n);\n\nconst NavigationAuth = () => (\n  <ul className=\"flex-row\">\n    <li>\n      <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul className=\"flex-row\">\n    <li>\n      <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Iniciar Sesión</Link>\n    </li>\n  </ul>\n);\n\n// {\n//   return (\n//     <nav className=\"main-menu\">\n//       <ul className=\"flex-row\">\n//         <li>\n//           <Link to={ROUTES.SIGN_IN}>Entrar</Link>\n//         </li>\n//         <li>\n//           <Link to={ROUTES.SIGN_UP}>Registrarse</Link>\n//         </li>\n//         <li>\n//           <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\n//         </li>\n//         <li>\n//           <Link to={ROUTES.HOME}>Home</Link>\n//         </li>\n//         <li>\n//           <Link to={ROUTES.ACCOUNT}>Cuenta</Link>\n//         </li>\n//         <li>\n//           <Link to={ROUTES.ADMIN}>Administración</Link>\n//         </li>\n//         <li>\n//           <SignOutButton />\n//         </li>\n//       </ul>\n//     </nav>\n//   );\n// };\n\nexport default Navigation;\n","import React from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport Button from '../Button';\n// const SomeComponent = () => (\n\n// );\nconst Landing = () => (\n  <div>\n    <h1> Landing </h1>\n    <Button\n      name=\"A Button\"\n      action={() => {\n        console.log('a button');\n        window.location.href = 'https://google.com';\n      }}\n    />\n    <Button\n      name=\"Another Button\"\n      action={() => {\n        console.log('another button');\n      }}\n      extraClassName=\"other-btn\"\n    />\n\n    <FirebaseContext.Consumer>\n      {firebase => {\n        return (\n          <div>I ' ve access to Firebase and render something .</div>\n        );\n      }}\n    </FirebaseContext.Consumer>\n  </div>\n);\n\nexport default Landing;\n","import React, { Component, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n// import { FirebaseContext } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1> Registrar Nuevo Usuario </h1>\n    <SignUpForm />\n  </div>\n);\n\n// INITIAL_STATE Captures User Information\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\n// SignUpForm Manages the FORM STATE in React's local state\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE }; // ... is SPREAD OPERATOR, here is like a PUSH METHOD\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME); // Pushes the route to the history object\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    console.log(this.state.email);\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit} className=\"sign-up-form\">\n        {/* INPUTS get value from local state & updates it with a onChange handler */}\n        <label>Nombre Completo</label>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Nombre Completo\"\n        />\n        <label>Email</label>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email\"\n        />\n        <label>Contraseña</label>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Contraseña\"\n        />\n        <label>Confirmar Contraseña</label>\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirmar Contraseña\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Registrar Nuevo Usuario\n    <Link to={ROUTES.SIGN_UP}> Registro </Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>Iniciar Sesión</h1>\n    <SignInForm />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <label>Email Registrado</label>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email\"\n        />\n        <label>Constraseña</label>\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Contraseña\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Iniciar Sesión\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React from 'react';\nconst PasswordForget = () => (\n  <div>\n    {' '}\n    <h1> Forgot password? </h1>{' '}\n  </div>\n);\nexport default PasswordForget;\n","import React from 'react';\nconst Home = () => (\n  <div>\n    <h1> Home </h1>\n    <p>Currently using React {React.version}</p>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\n\nconst Account = () => (\n  <div>\n    <h1>Account</h1>\n  </div>\n);\n\nexport default Account;\n","import React from \"react\";\nconst Admin = () => (\n  <div>\n    {\" \"}\n    <h1> Admin </h1>{\" \"}\n  </div>\n);\nexport default Admin;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authUser: null, // Sets a GLOBAL STATE\n    };\n  }\n\n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(\n      authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navigation authUser={this.state.authUser} />\n\n          <hr />\n\n          <Route\n            exact\n            path={ROUTES.LANDING}\n            component={LandingPage}\n          />\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n          <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n          <Route\n            exact\n            path={ROUTES.PASSWORD_FORGET}\n            component={PasswordForgetPage}\n          />\n          <Route exact path={ROUTES.HOME} component={HomePage} />\n          <Route\n            exact\n            path={ROUTES.ACCOUNT}\n            component={AccountPage}\n          />\n          <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}